package com.foundation;

public class A_BasicGrammar {
    public static void main(String[] args) {
//        ToDo:不知道这是啥，写写看看  类似于标记的作用，可以很快的定位到这个位置，方便查找
        System.out.println("HelloWorld");

//        双引号和单引号的区别
//        java中的单引号表示字符，java中的双引号是字符串
//        单引号引的数据一般是char类型的；双引号引的数据 是String类型的
//        java中单引号里面只能放一个字母或数字或符号；java中的双引号里面是0到多个字符构成。所以字符可以直接转换成字符串。
//                                              字符串需要使用charAt（n) 来获取第几个字符。
        char i1 = 'A';
        String i2 = "AA";
        System.out.println('B');
        System.out.println("AA");


    }
}

/*
public：访问修饰符号
static：关键字
void：返回类型
main：方法名
string[]：string类
args：字符串数组


概念词：
对象：对象是类的一个实例，有状态和行为。例如，一条狗是一个对象，它的状态有：颜色、名字、品种；行为有：摇尾巴、叫、吃等。
类：类是一个模板，它描述一类对象的行为和状态。
方法：方法就是行为，一个类可以有很多方法。逻辑运算、数据修改以及所有动作都是在方法中完成的。
实例变量：每个对象都有独特的实例变量，对象的状态由这些实例变量的值决定。

执行方式：
javac HelloWorld.java
java HelloWorld
Hello World

命名规则：
编写 Java 程序时，应注意以下几点：
大小写敏感：Java 是大小写敏感的，这就意味着标识符 Hello 与 hello 是不同的。
类名：对于所有的类来说，类名的首字母应该大写。如果类名由若干单词组成，那么每个单词的首字母应该大写，例如 MyFirstJavaClass 。
方法名：所有的方法名都应该以小写字母开头。如果方法名含有若干单词，则后面的每个单词首字母大写。
源文件名：源文件名必须和类名相同。当保存文件的时候，你应该使用类名作为文件名保存（切记 Java 是大小写敏感的），文件名的后缀为 .java。（如果文件名和类名不相同则会导致编译错误）。
主方法入口：所有的 Java 程序由 public static void main(String[] args) 方法开始执行。

标识符:
Java 所有的组成部分都需要名字。类名、变量名以及方法名都被称为标识符。
关于 Java 标识符，有以下几点需要注意：
所有的标识符都应该以字母（A-Z 或者 a-z）,美元符（$）、或者下划线（_）开始
首字符之后可以是字母（A-Z 或者 a-z）,美元符（$）、下划线（_）或数字的任何字符组合
关键字不能用作标识符
标识符是大小写敏感的
合法标识符举例：age、$salary、_value、__1_value
非法标识符举例：123abc、-salary

Java修饰符
像其他语言一样，Java可以使用修饰符来修饰类中方法和属性。主要有两类修饰符：
访问控制修饰符 : default, public , protected, private
非访问控制修饰符 : final, abstract, static, synchronized

变量：类变量/静态变量、成员变量/非静态变量、局部变量
数组：数组是储存在堆上的对象，可以保存多个同类型变量

枚举：
Java 5.0引入了枚举，枚举限制变量只能是预先设定好的值。使用枚举可以减少代码中的 bug。
例如，我们为果汁店设计一个程序，它将限制果汁为小杯、中杯、大杯。这就意味着它不允许顾客点除了这三种尺寸外的果汁。

注释：两种（略）；Java 编译器忽略注释和空行

接口
在 Java 中，接口可理解为对象间相互通信的协议。接口在继承中扮演着很重要的角色。
接口只定义派生要用到的方法，但是方法的具体实现完全取决于派生类。

Java源程序和编译型运行的区别：
编译型源程序--<编译连接>-->可执行程序EXE--<执行>-->（操作系统->裸机）
Java源程序.java--<编译>-->字节码程序.class--<解释/执行>-->（解释器->操作系统->裸机）

 */

/*
 * 1、print：将信息显示在命令窗口中，输出光标定位在最后一个字符之后。
 * 2、printf：将信息进行格式化显示在命令窗口中，输出光标定位在最后一个字符之后。
 * 3、println：将信息显示在命令窗口中，输出光标换行定位在下一行开头。
 * 特点：
 * 1、print：是需求输出的一系列参数, 其个数务必与式样化字符串所阐明的输出参数个数一样多, 各参数之间用","分开。
 * 2、printf：式样化规定字符, 以"%"开端, 后跟一个或几个规定字符, 用来确定输出内容式样。
 * 3、println：从右到左压栈，然后将先读取放到栈底，最后读取的放在栈顶，处理时候是从栈顶开始的。
 */

//Java注释的三种类型
//
//        1、单选注释：符号是：//
//        2、块注释： 符号是： /* */ 可以跨多行
//        3、javadoc注释： 符号是： /** */ 可以跨多行，
//        生成javadoc时，这样的注释会被生成标准的javaapi注释。
//
//        /** */注释的话，你在调用类和方法的时候会出现提示，内容就是你写的注释。
//        而/* */就没有了。/* */就是//的多行版
// Java 空行
//         空白行或者有注释的行，Java 编译器都会忽略掉

/*
 * application的编辑、编译和运行
 * 编辑：文件名与Public class类名一致
 * 编译：
 *      cd C:\JavaProject\demo01
 *          javac HelloWorld.java
 * 运行：
 *          java HelloWorld
 * Java的API文档：https://docs.oracle.com/javase/8/docs/api/index.html
 */

/*
 * 基本语法
 * 编写 Java 程序时，应注意以下几点：
 *
 * 大小写敏感：Java 是大小写敏感的，这就意味着标识符 Hello 与 hello 是不同的。
 * 类名：对于所有的类来说，类名的首字母应该大写。如果类名由若干单词组成，那么每个单词的首字母应该大写，例如 MyFirstJavaClass 。
 * 方法名：所有的方法名都应该以小写字母开头。如果方法名含有若干单词，则后面的每个单词首字母大写。
 * 源文件名：源文件名必须和类名相同。当保存文件的时候，你应该使用类名作为文件名保存（切记 Java 是大小写敏感的），文件名的后缀为 .java。（如果文件名和类名不相同则会导致编译错误）。
 * 主方法入口：所有的 Java 程序由 public static void main(String[] args) 方法开始执行
 */